#+TITLE: Legalese.io the Company

What organizational structure, governance model, and communication processes does Legalese use?

This is discussed on the #meta chat.

* Inspirations

** Opensource Projects

Legalese belongs to the opensource and Creative Commons traditions of Wikipedia, Git, Linux, and Public.Resource.Org, to name a few.

The Internet is built on open software and open standards. Legalese aims to be a major infrastructural pillar of Internet-enabled future commerce, in the same way that Wikipedia has become a major pillar of online education and research.

** Opensource Businesses

Legalese costs money to run. Where will that money come from?

Some opensource infrastructure projects are embarrassingly underfunded. [[http://www.technologyreview.com/view/526386/the-underfunded-project-keeping-the-web-secure/][OpenSSL]] and [[http://www.propublica.org/article/the-worlds-email-encryption-software-relies-on-one-guy-who-is-going-broke][GPG]] recently put out calls for donations. Legalese must be more sustainable than just relying on donations. That means incorporating as a business, maybe getting venture funding. There are many precedents for opensource businesses, including [[http://en.wikipedia.org/wiki/MariaDB][MariaDB]].


** "Teal" organizations

Self-managing organizations are better suited to Internet-era postindustrial conditions. See also
- http://www.reinventingorganizations.com/
- http://www.holacracy.org/how-it-works/

Many opensource efforts have much in common with Teal organizations.

* Communication Channels

- realtime chat :: Slack

- email :: Google Groups

- source code, legal templates, and some documents :: Github

- other documents :: Google Drive

- project management and task tracking :: Asana

** deprecated channels

- project management and forum :: basecamp
* Innovation: Bail-only Design

Adhocracies tend to be highly informal, with people joining and leaving projects all the time.

By analogy with [[http://en.wikipedia.org/wiki/Crash-only_software][crash-only software design]], a bail-only organizational structure aims to increase robustness by removing critical dependence on any individual, allowing any participant to leave the company at any time, and rejoin at a later time -- or never!

Swappable *roles* are emphasized over job titles and fixed areas of authority/responsibility. Any individual who satisfies the prerequisites to assume a role may do so.

* Innovation: Compensation

In a purely volunteer not-for-profit project, little is needed beyond an IP/copyright assignment.

Legalese may take a commercial, for-profit form to maximize sustainability and satisfy investors. How will participants be rewarded?

We draw on the conventions established in the startup industry to manage expectations. If the company has cash available, and participants need to draw a salary from Legalese to continue contributing, then an employment or contractor relationship can be established. If the participant is willing to trade equity for cash, then the participant can be registered in the stock pool. Ideally, cash and equity should be interchangeable.

Compensation should be determined by a participant's fellow Circle members and immediate business units.

Or maybe we do a next-generation approach using some kind of [[http://swarm.fund/][Swarm]] or [[http://www.assembly.com/][Assembly]] or other [[http://www.scribd.com/doc/255347578/SWARM-Working-Paper-Distributed-Networks-and-the-Law][Distributed Collaborative Organisation]] model.

** Proposal 1

Each participant's compensation is their task fees plus badge rate adjusted for activity level plus circle bonus.

*** Task Fees
When a circle needs something done, it posts a project/task in Asana, with the following attributes:
- badges :: qualifications needed to accomplish that task.
- short credit :: estimated short-term value add, typically measured in cash
- long credits :: estimated long-term value add, typically measured in equity
- hard deliverables :: required acceptance criteria
- soft deliverables :: if the task is done by a certain deadline, or in a certain way, additional short and/or long credits are awarded.
- mutex :: either exclusive or open.
- mushroom :: recurring tasks are mushrooms which anyone can clone and claim.

The short and long credits are allocated out of a budget set by the circle's parent.

A project/task may be restricted to a specific role or circle; or it may be unrestricted. Such a restriction is expressed through the badge mechanism.

If mutex==exclusive then the task can only be assigned to one person at a time.

If mutex==melee then multiple people may compete to execute the task. The first person to demonstrate delivery may win the prize.

*** Auction Mechanism
It is possible for prospects to negotiate elements of a task after it has been posted, so that the short/long credits may float until the market clears. However, such negotiation must occur in the task comments directly. An auction model may arise with multiple prospects bidding for a given task.

*** Credits
Both short and long credits are convertible to a mix of cash and equity.

Short credits may be converted to 100% cash and 0% equity, or 80% cash and 20% equity, or anywhere in between.

Long credits may be converted to 0% cash and 100% equity, or 20% cash and 80% equity, or anywhere in between.

*** Badge Rate
Every participant is entitled to badge rate, multiplied by their activity level.

**** Badges ("Skills")
counts the number and size of badges held by a participant, like plates of sushi at a conveyor belt restaurant.

Badges may run in series, like Javascript Programmer Bronze, then Javascript Programmer Silver, then Javascript Programmer Gold.

**** Seniority
is represented by a special badge that increments every month. A decay function may apply to cover any interruptions or absences. Think of this as the traditional salary band, but with less weight.

**** Roles
are represented by one badge for each role.

*** Badge Weights

Each badge of each participant possesses a weight rating -- a real number usually in the range 0 to 100. If participant wins a bid on a project/task, but does not deliver it to the satisfaction of the commissioning party, they get to choose which of their badges should lose weight. If the project is accepted, the weight increases. When the weight goes over a certain amount, they earn the next badge in the series.

Don't bid for jobs that you don't think you can do, especially mutex jobs.

*** Activity Level
The number of short+long credits achieved in a given period determine the activity level for that period. The activity level is a value between 0 and 1. You may read it this way:
- 0   :: participant was effectively inactive
- 0.5 :: participant was part-time
- 1   :: participant was full-time

*** As Code

#+BEGIN_CODE js

function Company(params) {
  this.compensationPoolSharePrice = params.compensationPoolSharePrice; // 2 would mean in $2 per share

  var equityToCash = function(equity) {
    return equity * this.compensationPoolSharePrice; // if the current value of the company's equity pool is $2 per share
  };

  var cashToEquity = function(cash) {
    return cash / (this.equityToCash(1)); // inverse
  };
}

function Task(params) {
  this.company = params.company;
  this.badges  = params.badges;
  this.short   = params.short;  // short credits
  this.long    = params.long;   // long credits
  this.hard    = params.hard;   // hard acceptance criteria
  this.soft    = params.soft;   // soft acceptance criteria
}

var shortCashMin = 0.80, shortCashMax = 1;
var  longCashMin = 0.00,  longCashMax = 0.20;

function creditsToCashAndEquity(type, quantity, cashComponentDesired, company) {
  var cashComponent;
  if      (type == "short" && cashComponentDesired < shortCashMin) { cashComponent = shortCashMin; console.log("equity component of short credits may not exceed " + (1-shortCashMin)); }
  else if (type == "short" && cashComponentDesired > shortCashMax) { cashComponent = shortCashMax; console.log(  "cash component of short credits may not exceed " + shortCashMax); }
  else if (type == "long"  && cashComponentDesired <  longCashMin) { cashComponent =  longCashMin; console.log("equity component of long credits may not exceed " + (1-longCashMin)); }
  else if (type == "long"  && cashComponentDesired >  longCashMax) { cashComponent =  longCashMax; console.log(  "cash component of long credits may not exceed " + longCashMax); }
  else                                                             { cashComponent = cashComponentDesired }
  var equityComponent = 1 - cashComponent;
  return {  cash:                      quantity * cashComponent,
          equity: company.cashToEquity(quantity * equityComponent) };
}

var activityLevelFullTime = 20;
var activityLevelPartTime = 10;

function Participant(params) {
  this.company    = params.company;
  this.riskRating = params.riskRating || 0; // real
  this.seniority  = params.seniority  || 0; // int
  this.multiplier = params.multiplier || 0; // real

  this.badges = { }; // qualifications earned over time

  this.compensation = function(tasks) {
    var totalTaskSize = tasks.sum(function(t){return t.short + t.long});
    var activityLevel = (totalTaskSize > activityLevelFullTime ? 1   :
                         totalTaskSize > activityLevelPartTime ? 0.5 : 0);
                         


#+END_CODE

* Innovation: Teal Architecture

#+BEGIN_QUOTE
Any sufficiently complicated company w/o management contains an ad hoc, informally-specified, bug-ridden, slow implementation of management.
https://twitter.com/wycats/status/368752712894017536
#+END_QUOTE

A Teal or Holacratic architecture doesn't mean anarchy. It doesn't mean absence of management. It means self-management. In a Teal organization, people spend /more/ time doing management than in a traditional business. The difference is, people manage themselves and one another; they don't manage up and down.

** Participants

Individual human beings elect to participate in the company. Volunteers, interns, employees, contractors, opensource developers, content contributors, mailing list subscribers -- all are Participants. By participating in the company, they agree to abide by this governance model, and they have the right under this governance model to make requests, ask for advice, and be asked for advice. They also agree to subject themselves to the dispute resolution process.

A special category of "end-user" or "customer" exists. They are not considered a "participant" operating under this governance model until they take on a differentiated role, such as moderator, community leader, or opensource contributor. When they do, they are onboarded to this governance model, mostly by reading this document.

** Roles

A Role expresses a set of work processes. In a restaurant, Roles might be Waiter, Chef, Host, or Cashier. An individual at the restaurant might enact multiple roles: in a small restaurant, the Host might also act as a Cashier and a Waiter.

Individual participants can be onboarded to one or more Roles in a company.

** Circles

If multiple individuals play the same Role, they form a group called a Circle. Circles are a unit of abstraction and MUST exhibit consensus when dealing with other parties, even if that consensus is simply a statement explaining that there is no consensus yet, and describing the conflicting positions.

In a restaurant with multiple chefs, the Circle might be called Kitchen, and the waiters might deal with the Kitchen as a unit of abstraction: orders go in, dishes come out. Waiters don't want to know which chef is preparing which dish. Chefs don't want to know which waiter is serving which table. There is just a hole in the wall and a little bell that goes "ding!"

A Circle may appoint a member or members to act as Lead Links -- representatives of the Circle to other parts of the organization. If a waiter hears consistently from diners that the steaks are coming out too rare, that waiter needs to be able to raise the issue either with the entire Kitchen circle, or with one representative of the Kitchen who collates the feedback.

** Transparency.

It is annoying to not be able to find information when you need it. It is also annoying to be interrupted by people asking you for information.

All information relevant to other people in the company, particularly information that crosses the organizational boundary, SHOULD be recorded in a shared location accessible by other participants. This includes questions, discussions, decisions, policies, and processes.

Chat logs and mailing list logs are available and searchable in the messaging system. Note that direct messaging between participants about company business is discouraged. Even if there are only two participants of a Circle, the discussions within those participants should be conducted in a shared venue, and logged for the benefit of other participants of the company, and for the benefit of future members of the Circle!

So long as non-Asperger humans are involved in the project, face-to-face and tele/video conversations between team members are unlikely to ever be stamped out, but they MUST be minuted in a forum/archive accessible either to the relevant circle or, preferably, company-wide. The point here is that ephemeral discussions may live on in the memory traces of the participants, but the human mind is a fallible thing; [[http://www.english.illinois.edu/-people-/faculty/debaron/482/482readings/phaedrus.html][over Thamus's objections, we adopted writing]], and we should make the most of it.

Some exceptions exist.

Confidential information relating to private matters regarding participant/employee health, family, etc, may be excluded.

Private, ephemeral chats about non-company business may be excluded. "Lunch?" "Yoga?" etc.

Confidential, sensitive, or proprietary information such as passwords, competitive trade secrets, and user data protected by personal data privacy legislation may be excluded from the general transparency rule. In such cases, participants, roles, and circles may elect to share data within circles instead of with the whole company.

By default, all information should be fully public, even to non-participants of the company, unless there is a compelling reason to keep it private. Reasons to keep information within the company include: half-baked discussions-in-progress should not be exposed to misinterpretation by an uninformed public; competitive strategy may hurt the company if disclosed at the wrong time or in the wrong way; information relating to partnerships may be covered by NDA.

** The advice process.

Before making a decision, a role player (acting on behalf of their circle) MUST seek the advice of all parties who will be substantively affected by that decision.

** The request process.

Any participant can submit a request to any other participant about the way they play their role generally, or about a particular action specifically.

** The dispute resolution process.

If a conflict arises which is not naturally resolved within a circle, dispute resolution process defines an escalation pathway: a dispute resolution committee involving representatives from all advisory parties MUST be convened. If the dispute is not resolved within that committee, larger and larger advisory committees are convened. (In practice, the dispute is referred to larger and larger gatherings of the community. (There is a tension between the frequency of such referenda, and the size of the dispute. The decision to refer to a larger committee may be made by the dispute resolution committee.)

** The contribution process.

Content contributors and technology developers are subject to the [[https://guides.github.com/activities/contributing-to-open-source/][usual conventions of software projects]]. They may submit pull requests or have merge authority. The circle of Maintainers is usually smaller than the circle of Contributors. Contributors may be promoted to Maintainers by consensus of the Maintainer circle.

* Innovation: Training for Aesthetics

In organizations expressing design-driven innovations, important decisions often fall into an aesthetic rather than technical or economic domain.

Part of new-participant onboarding MUST involve recruitment for, and training in, the dominant aesthetics, principles, values, vision, and tensions of the project.

Minority or opposition opinions should be actively sought and aired. Consider the "Devil's Advocate" process.

* Corporate Form

As of 2015-06-06 Legalese has not been incorporated. This section proposes a corporate form.

Because it represents a high-potential, high-tech, high-impact innovation with commercial potential, Legalese needs to be able to take venture funding.

Legalese will be incorporated in Singapore as a Private Limited company.

Legalese needs to be scrupulously aware of the Legal Profession Act.

Legalese offers a number of products and services. Some of those products and services are free. Some are paid.



